tab1<-read.table("D:/project/SMRA/v2/encode_test/part1/rbp_event_deal_all_total_BS_0.5.txt")
tab2<-read.table("D:/project/SMRA/v2/encode_test/part1/rbp_event_deal_all_total_default_0.5.txt")
colnames(tab1)<-c("Events","P1","RBP","dpsi")
colnames(tab2)<-c("Events","P2","RBP","dpsi")
tab1_0.5<-tab1[which(as.numeric(tab1[,2])>0.5),]
tab2_0.5<-tab2[which(as.numeric(tab2[,2])>0.5),]

tab1_2<-merge(tab1,tab2)
tab1_2$dP<-tab1_2$P1-tab1_2$P2
tab1_2$type<-ifelse(tab1_2$dP>0.1,1,ifelse(tab1_2$dP<-0.1,-1,0))

load("D:/project/SMRA/v2/data/encode_eclip/bindingstie_all.RData")


library(ggplot2)
library(paletteer)
load("D:/project/SMRA/v3/encode/data.RData")
load("D:/project/SMRA/v2/data/KD_event.RData")
library(dplyr)
library(foreach)
colnames(rbp_event_deal_all)<-c("Events","score","RBP")

qq<-1
result_ds<-foreach(i = target, .packages = "dplyr",.combine = "rbind") %do% {
  cat(qq,"\n")
  qq<-qq+1
  rbp_sample<-batch_matrix$sample_name[which(batch_matrix$File_target==i)]
  ctrl_sample<-batch_matrix$sample_name[which((batch_matrix$type=="ctrl")&(batch_matrix$LEVEL==unique(batch_matrix$LEVEL[which(batch_matrix$File_target==i)])))]
  rbp_expr<-expr[,c(rbp_sample,ctrl_sample)]

  n1<-length(rbp_sample)
  n2<-length(ctrl_sample)

  rbp_psi<-PSI[,c(rbp_sample,ctrl_sample)]
  filter_rmats<-function(rmats_matrix,n){
    results<-matrix(TRUE,nrow = nrow(rmats_matrix),ncol = 1)
    results<-apply(rmats_matrix,1,function(x){
      length0<-length(which(as.numeric(x)==0))
      length1<-length(which(as.numeric(x)==1))
      result<-ifelse((length0+length1)>=n,FALSE,TRUE)
      return(result)
    })
    return(results)
  }
  f1<-filter_rmats(rbp_psi,ncol(rbp_psi))

  rbp_psi<-rbp_psi[f1,]
  rbp_psi<-rbp_psi[which(abs((rbp_psi[,1]+rbp_psi[,2]-rbp_psi[,3]-rbp_psi[,4])/2)>0),]

  rbp_psi[,2]<-rbp_psi[,2]+0.0001

  Events_DS<-matrix(NA,nrow = nrow(rbp_psi),ncol = 5)
  Events_DS<-t(apply(rbp_psi,1,function(x){
    a<-DS(x,n1,n2)
    bb<-c(rownames(x),a[["pvalue"]],a[["FDR"]],a[["dPSI"]],a[["abs_dPSI"]])
    return(bb)
  }))

  Events_DS<-Events_DS[complete.cases(Events_DS),]
  Events_DS<-cbind(rownames(Events_DS),Events_DS)
  colnames(Events_DS)<-c("Events","pvalue","FDR","dPSI","abs_dPSI")

  Event_DS_sig<-Events_DS[which((as.numeric(Events_DS[,2])<0.05)&(as.numeric(Events_DS[,5])>0.1)),]
  Event_DS_sig<-cbind(RBP=i,Event_DS_sig)
  return(Event_DS_sig[,c(1:2,5)])

}


colnames(result_ds)<-c("RBP","Events","label")
rbp_event_dpsi<-inner_join(as.data.frame(tab1_2),as.data.frame(result_ds),by=c("RBP","Events"))
# rbp_event_dpsi_0.1<-rbp_event_dpsi[which(as.numeric(rbp_event_dpsi$label)>0.1),]
as.data.frame(rbp_event_dpsi) %>% group_by(RBP) %>%
  summarise(num=n(),mean_dpsi=mean(abs(as.numeric(label)))) ->rbp_event_dpsi_summary
result<-foreach(i = target, .packages = "dplyr",.combine = "rbind") %do% {
  rbp_sample<-batch_matrix$sample_name[which(batch_matrix$File_target==i)]
  ctrl_sample<-batch_matrix$sample_name[which((batch_matrix$type=="ctrl")&(batch_matrix$LEVEL==unique(batch_matrix$LEVEL[which(batch_matrix$File_target==i)])))]
  rbp_expr<-expr[,c(rbp_sample,ctrl_sample)]

  n1<-length(rbp_sample)
  n2<-length(ctrl_sample)

  rbp_expr$logFC<-apply(rbp_expr,1,function(x){
    return((log2(sum(as.numeric(x[1:n1]))/sum(as.numeric(x[(n1+1):(n1+n2)])))))
  })
  rbp_expr<-as.data.frame(rbp_expr)
  rbp_expr$logFC[is.infinite(rbp_expr$logFC)]<-0
  rbp_expr$logFC[is.nan(rbp_expr$logFC)]<-0
  rbp_expr$RBP<-i
  return(rbp_expr[i,6:5])
}

dat<- tab1_2[which(tab1_2$RBP=="AQR"),]
ggplot(data = dat)+
  geom_point(aes(x=P1,y=P2,col=type))+
  theme_classic()+
  scale_color_gradientn(colors = paletteer_c("ggthemes::Orange-Gold", 30),name='Jaccard')+
  theme(legend.position="right",
                      legend.title = element_text(size=15),
                      legend.text = element_text(size=15))+
  geom_vline(xintercept = 0.5, linetype = "dashed", color = "red")+
  geom_hline(yintercept = 0.5, linetype = "dashed", color = "red")+
  guides(size=FALSE)+
  xlab("P1_BS")+
  ylab("P2_default")+
  # scale_fill_manual(values = c("#6DB6FFFF","#DB6D00FF"))+
  theme(axis.text.x=element_text(vjust=0.8,angle = 0, size=10),
                      axis.text.y=element_text(size=10),
                      axis.title.x=element_text(vjust=1,size=15),  # X axis title
                      axis.title.y=element_text(size=15))
rbp_mat<-matrix(NA,111,11)
colnames(rbp_mat)<-c("ID","default_num","default_aver_dpsi","BS_num","BS_ds_num","default_BS_num",
                     "ds_num","default_ds_num","aver_dpsi","log2FC","out_eclip")
for (i in 1:111) {
  RBP<-unique(rbp_event_dpsi$RBP)[i]
  rbp_mat[i,"ID"]<-RBP
  BS_part<-tab1_0.5[which(tab1_0.5$RBP==RBP),]
  default_part<-tab2_0.5[which(tab2_0.5$RBP==RBP),]
  ds_part<-rbp_event_dpsi[which(rbp_event_dpsi$RBP==RBP),]
  ds_default_part<-ds_part[which(ds_part$Events %in% default_part$Events),]
  ds_BS_part<-ds_part[which(ds_part$Events %in% BS_part$Events),]
  default_BS_part<-ds_part[which(default_part$Events %in% BS_part$Events),]
  rbp_mat[i,"default_num"]<-nrow(default_part)
  rbp_mat[i,"default_aver_dpsi"]<-mean(as.numeric(default_part$dpsi))
  rbp_mat[i,"BS_num"]<-nrow(BS_part)
  rbp_mat[i,"BS_ds_num"]<-nrow(ds_BS_part)
  rbp_mat[i,"default_BS_num"]<-nrow(ds_default_part)
  rbp_mat[i,"ds_num"]<-nrow(ds_part)
  rbp_mat[i,"default_ds_num"]<-nrow(ds_default_part)
  rbp_mat[i,"aver_dpsi"]<-mean(as.numeric(ds_default_part$dpsi))
  rbp_mat[i,"log2FC"]<-(result[which(result$RBP==RBP),2])
  rbp_mat[i,"out_eclip"]<-length(setdiff(BS_part$Events,default_part$Events))
  cat(i,"\n")
}
rbp_mat<-as.data.frame(rbp_mat)
rbp_mat$default_num<-as.numeric(rbp_mat$default_num)
rbp_mat$default_aver_dpsi<-as.numeric(rbp_mat$default_aver_dpsi)
rbp_mat$BS_num<-as.numeric(rbp_mat$BS_num)
rbp_mat$ds_num<-as.numeric(rbp_mat$ds_num)
rbp_mat$BS_ds_num<-as.numeric(rbp_mat$BS_ds_num)
rbp_mat$default_BS_num<-as.numeric(rbp_mat$default_BS_num)
rbp_mat$default_ds_num<-as.numeric(rbp_mat$default_ds_num)
rbp_mat$aver_dpsi<-as.numeric(rbp_mat$aver_dpsi)
rbp_mat$log2FC<-as.numeric(rbp_mat$log2FC)
rbp_mat$out_eclip<-as.numeric(rbp_mat$out_eclip)
rbp_mat$abs_log2FC<-abs(rbp_mat$log2FC)
# rbp_mat$new_y<-log2(rbp_mat$default_num)*(rbp_mat$default_aver_dpsi)/rbp_mat$abs_log2FC
# rbp_mat$new_y<-log2(rbp_mat$default_num)/rbp_mat$abs_log2FC
rbp_mat$new_y<-log2(rbp_mat$default_num)
rbp_mat<-rbp_mat[which(rbp_mat$abs_log2FC>0.5),]
# rbp_mat$new_x<-rbp_mat$out_eclip/rbp_mat$BS_num
rbp_mat$new_x<-log2((rbp_mat$out_eclip/rbp_mat$default_BS_num)+1)
dat_highlight_x<-rbp_mat[order(rbp_mat$new_x,decreasing = T)[1:10],]
dat_highlight_y<-rbp_mat[order(rbp_mat$new_y,decreasing = T)[1:10],]
lwd_pt <- .pt*72.27/96
theme_set(theme_bw(base_size = 8, base_line_size = 0.5/lwd_pt, base_rect_size = 0.5/lwd_pt))

ggplot(data =rbp_mat,aes(x=new_x,y=new_y,col=new_y))+
  geom_point()+
  # geom_text(nudge_y = 0.1)+
  # geom_line(aes(x=,y=x))+
  # ggrepel::geom_text_repel(aes(label = ID))+
  theme_classic()+
  scale_color_gradientn(colors = paletteer_c("ggthemes::Orange-Gold", 10),name='new_y')+
  ggrepel::geom_text_repel(aes(label=ID),dat_highlight_x,size=8/.pt)+
  ggrepel::geom_text_repel(aes(label=ID),dat_highlight_y,size=8/.pt)+
  theme(legend.position="right",
        legend.title = element_text(size=8),
        legend.text = element_text(size=8))+
  # guides(size="none")+
  xlab("new_x")+
  ylab("log2(default_ds_num)")+
  # scale_y_continuous(expand = c(0, 0))+
  # scale_x_continuous(expand = c(0, 0))+
  # scale_fill_manual(values = c("#6DB6FFFF","#DB6D00FF"))+
  theme(axis.text.x=element_text(vjust=0.8,angle = 0, size=8),
        axis.text.y=element_text(size=8),
        axis.title.x=element_text(vjust=1,size=8),  # X axis title
        axis.title.y=element_text(size=8))
